[
	{
		"summary":"An Introduction to MPS - Meta Programming System\r\n\r\nJetBrains Meta Programming System (MPS) is an open-source framework addressing the task of creation, extension and combined use of Domain Specific Languages (DSL's). Primarily focused on IDE/code-generation features for new languages, this framework allows you to dynamically create extensions to existing languages and immediately use new language constructions in program code. JetBrains MPS implements Language Oriented Programming (LOP) ideas, which are gaining more and more attention today. In other words, MPS is a reference implementation of the future software development paradigm.\r\n\r\nDuring this hands-on session, participants will be guided through a new language creation in MPS, which will help them better understand the MPS approach and learn its basic features, as well as try the recently released DSL debugger. You will be able to ask MPS developers deeply technical questions, and at the end we are planning an informal discussion about LOP in general.",
		"id":901,
		"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/901",
		"title":"Language-Oriented Programming in Action",
		"speaker":"Alex Shatalin",
		"track":"Java Core (SE/EE)",
		"speakers":[
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/901",
				"speaker":"Alex Shatalin"
			},
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/904",
				"speaker":"Vadim Gurov"
			}
		],
		"experience":"NOVICE",
		"type":"Labs (3h)"
	},
	{
		"summary":"The NetBeans Platform is the framework that underlies the NetBeans IDE - and many other desktop applications, some of which you may have already used. The Platform saves years of development time in building any significant desktop application, by providing a modular framework that simplifies both developing and updating desktop applications.\r\n\r\nIt is used by vendors as diverse as Nokia (NetACT - cellular network monitoring and management) and Boeing (engineering materials analysis), UNESCO and many others, to develop applications as diverse as photo library management, satellite network management, semiconductor testing, planning oil drilling and music composition.\r\n\r\nThe NetBeans Platform is based on pure Java and uses the Java standard Swing toolkit, making applications based on it portable - and even deliverable via Java WebStart directly via the web.\r\n\r\nThis lab will provide a comprehensive overview of the NetBeans Platform, how it works, and how to get started using it.\r\n\r\nSoftware requirements\r\n-\tJDK 1.6\r\n-\tNetBeans IDE 6.9",
		"id":902,
		"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/902",
		"title":"Developing Substantial Java Desktop Applications",
		"speaker":"Geertjan Wielenga",
		"track":"Java Core (SE/EE)",
		"speakers":[
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/902",
				"speaker":"Geertjan Wielenga"
			}
		],
		"experience":"NOVICE",
		"type":"Labs (3h)"
	},
	{
		"summary":"Members of the Arquillian team unveil the missing link in enterprise Java development: simple, portable integration tests. For many, working in enterprise Java has long been an arduous undertaking because of this void. While development life is simple with unit tests and mocks, they only take you so far. Eventually, you need to validate how your components interact and operate in their intended environment--you real need integration tests. Yet, writing integration tests has meant assuming the burden of bootstrapping all or part of your infrastructure. That's time lost and it places a mental barrier on testing. We'll teach you how to get out of this jam and make the transition from unit to integration tests without any trouble at all.\r\n\r\nThis lab puts Arquillian in your toolbox. Arquillian is a container-oriented testing framework layered atop TestNG and JUnit that makes testing enterprise Java applications easy. It does so by bringing your test to the runtime rather than requiring you to manage the runtime from your test. Picking up where unit tests leave off, Arquillian enables you to test real components that rely on real enterprise services in a real runtime.\r\n\r\nWhatâ€™s the secret? This lab gives you an appreciation for how Arquillian simplifies integration testing by providing a component model for tests, just as Java EE 5 simplified server-side programming by providing declarative services for application components. We'll study the test component model, which consists of container lifecycle management, test enrichment (dependency injection), container deployment and in-container test execution. Using a component model means your tests are portable and able to move between different environments, from single embedded or remote to multi-server to multi-cloud nodes.\r\n\r\nWe'll begin by introducing you to the fluent API provided by ShrinkWrap that is used to package a test archive, giving you fine-grained control over which resources are available to be tested. We'll show examples of how the test archive is deployed and executed inside standalone, embedded and remote containers. You'll witness how RPC-style (or local, if applicable) communication between the test runner and the container negotiates which tests are executed and reports back the results.\r\n\r\nYou'll walk away confident that you can:\r\n\r\n1. write integration tests just as you would a unit test and\r\n2. run those tests in multiple environments (containers)\r\n\r\nJoin this lab to learn how simple and powerful Java enterprise testing can be.",
		"id":903,
		"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/903",
		"title":"Java enterprise testing made easy with Arquillian",
		"speaker":"Aslak Knutsen",
		"track":"Java Core (SE/EE)",
		"speakers":[
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/903",
				"speaker":"Aslak Knutsen"
			},
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/244",
				"speaker":"Dan Allen"
			},
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/295",
				"speaker":"Pete Muir"
			}
		],
		"experience":"NOVICE",
		"type":"Labs (3h)"
	},
	{
		"summary":"In this hands-on lab we make use of the Apache Aries as a runtime, using Eclipse and free enterprise OSGi tooling. The lab covers packaging OSGi bundles and enterprise OSGi applications, as well as using OSGi blueprint and other OSGi enterprise specification technologies. At the end of the lab we show the same application running on a WebSphere and/or Geronimo runtime.\r\n\r\nPre-requisites\r\n\r\nBring your own laptop. The Eclipse software needed to run this lab will be provided on USB memory sticks.\r\nYou may already pre-install Eclipse classic 3.6.1 on your laptop before this lab. You can download it http://www.eclipse.org/downloads/index.php.",
		"id":904,
		"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/216",
		"title":"Developing Enterprise OSGi applications",
		"speaker":"Timothy Ward",
		"track":"Java Core (SE/EE)",
		"speakers":[
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/216",
				"speaker":"Timothy Ward"
			},
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/904",
				"speaker":"Zoe Slattery"
			}
		],
		"experience":"NOVICE",
		"type":"Labs (3h)"
	},
	{
		"summary":"TBA",
		"id":905,
		"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/272",
		"title":"Hands-On Scala",
		"speaker":"Dick Wall",
		"track":"New Languages on the JVM",
		"speakers":[
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/272",
				"speaker":"Dick Wall"
			},
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/273",
				"speaker":"Bill Venners"
			}
		],
		"experience":"NOVICE",
		"type":"Labs (3h)"
	},
	{
		"summary":"\"The architecture style that drives the web\"\r\n\r\n\"REST\" is frequently being touted as the best way to build web services and applications. Or consider the more pragmatic reason to join in: numerous REST inspired open API's exhist and are being put to use by the big players in the (web-, social-, cloud-, ...) industry. How do you create or connect to such REST services using Java?\r\n\r\nThis hands-on lab will steer away from the theoretical and conceptual discussions that surround the topic. We assume you've figured out the WHY yourself and are coming over to learn about the practical HOW.\r\n\r\nWe're setting out to help out with questions like:\r\n\r\n-\tWhich API's and techniques exist? (URI templates, jaxRS, routing, Restlet...)\r\n-\tHow to build and consume web services, web applications and web sites with those?\r\n-\tHow to write applications in a stateless world?\r\n-\tHow to capture/control the state and the application flow?\r\n-\tHow to blend in with existing service layers based on the usual suspects JPA, Spring, ...\r\n\r\nAlong the way we'll touch upon some non-functional needs like\r\n-\tSensible caching and\r\n-\tPractical security\r\n-\tTips and Techniques for debugging and testing.\r\n\r\nWe prepare a step-by-step hands-on exercise, and for a collaborative atmosphere and open discussion that shares some architecture level thoughts as well:\r\n-\tWhich practical considerations to make concerning new aspects like URI design and canonicalization, method support choice, content negotiation, sensible response methods, expected HTTP Header use, link-aware representations etc etc.\r\n-\tHow do I organize modular development and reuse?\r\n-\tWhen and why to choose for different routing, wiring and representation techniques?\r\n\r\nWe do assume participants to show up with a laptop sporting a usable JDK (5+), Maven2, and your IDE of preference. Obviously the term count for 'web' in this text should be high enough to explain the essential HTTP, HTML, CSS, JavaScript, browser knowledge to anyone showing up.",
		"id":906,
		"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/160",
		"title":"RESTful development with Java",
		"speaker":"Marc Portier",
		"track":"Java Core (SE/EE)",
		"speakers":[
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/160",
				"speaker":"Marc Portier"
			}
		],
		"experience":"NOVICE",
		"type":"Labs (3h)"
	},
	{
		"summary":"Bring your laptop, install Flash Builder 4 and join Adobe experts to build your first Rich Internet Application connected to a Java back-end. During this training, you'll learn how to develop application screens with transitions, visual effects, charting and data visualization components. Then you'll understand how to plug your Flex screens to Java services exposed on the server. After this introduction, you should be able to deep-dive into the framework and develop Flex application!",
		"id":907,
		"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/331",
		"title":"Develop your first Flex 4 application",
		"speaker":"Michael Chaize",
		"track":"Desktop/RIA/Mobile",
		"speakers":[
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/331",
				"speaker":"Michael Chaize"
			}
		],
		"experience":"NOVICE",
		"type":"Labs (3h)"
	},
	{
		"summary":"This lab will offer an overview of Java EE 6 through a rundown of its key new features. Participants will build an application from scratch via incremental steps and a dozen demos and exercises, each illustrating new features of the platform. The lab is an ideal opportunity to get up to speed with Java EE 6. Attendees will learn about: - Managed beans, Enterprise JavaBeans (EJB) 3.1 packaging and testing - Java Persistence API (JPA) improvements - JavaServer Faces (JSF) with facelets, composite components, Ajax - RESTful resources - Contexts and Dependency Injection (CDI) and more The content was initially created with Antonio Goncalves (Java EE 6 book author and EG member) and is perpetually improving at beginningee6.kenai.com.\r\n\r\nRequired Software\r\n-\tJava 6 (recent update, ideally _21)\r\n-\tNetBeans 6.9.1 (Java or \"All\" bundle)\r\n-\tGlassFish 3.0.1 (if not already installed as part of the NetBeans bundle)\r\n-\tMaven 2.x (3.x also seems to work)\r\n-\tcUrl or some other command line HTTP client (wget, ...)",
		"id":908,
		"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/182",
		"title":"Beginning with the Java EE 6 Platform",
		"speaker":"Alexis Moussine-Pouchkine",
		"track":"Java Core (SE/EE)",
		"speakers":[
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/182",
				"speaker":"Alexis Moussine-Pouchkine"
			},
			{
				"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/116",
				"speaker":"Antonio Goncalves"
			}
		],
		"experience":"NOVICE",
		"type":"Labs (3h)"
	}
]
